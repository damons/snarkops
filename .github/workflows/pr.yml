name: PR
on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # TODO move to a release ci
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         path: snarkos-test

  #     - name: Checkout snarkOS
  #       uses: actions/checkout@v4
  #       with:
  #         repository: AleoNet/snarkOS
  #         path: snarkos

  #     - name: Checkout snarkVM
  #       uses: actions/checkout@v4
  #       with:
  #         repository: AleoNet/snarkVM
  #         path: snarkvm

  #     - name: Use mold linker
  #       uses: rui314/setup-mold@v1

  #     - name: Install nightly and cranelift
  #       uses: dtolnay/rust-toolchain@nightly
  #       with:
  #         toolchain: nightly-2024-04-01
  #         components: rustc-codegen-cranelift-preview

  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         key: cache-v1

  #     - name: Build
  #       env:
  #         RUSTFLAGS: -Zcodegen-backend=cranelift -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort
  #       run: cargo +nightly-2024-04-01 build --verbose

  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ☁️ Install Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: 📋 Format Check
        run: cargo +nightly fmt -- --check

  test:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Zcodegen-backend=cranelift

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🥬 Use Mold Linker
        uses: rui314/setup-mold@v1

      - name: ☁️ Install Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2024-04-01
          components: rustc-codegen-cranelift-preview clippy

      - name: 🫙 Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: cache-v1
          cache-on-failure: true

      - name: ☁️ Install Nextest
        uses: taiki-e/install-action@nextest

      # - name: ☁️ Install cargo-machete
      # run: cargo install cargo-machete

      # - name: 📋 Clippy Check
      #   env:
      #     RUSTFLAGS: -Zcodegen-backend=cranelift
      #   run: cargo +nightly-2024-04-01 clippy --all --all-targets -- -D warnings

      # - name: 📋 Check Unused Deps
      #   if: always()
      #   env:
      #     RUSTFLAGS: -Zcodegen-backend=cranelift
      #   run: cargo machete

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            top_toml:
              - 'Cargo.toml'
            aot:
              - 'crates/aot/**/*.rs'
            checkpoint:
              - 'crates/checkpoint/**/*.rs'
            control_plane:
              - 'crates/snops/**/*.rs'
            agent:
              - 'crates/snops-agent/**/*.rs'
            scli:
              - 'crates/snops-cli/**/*.rs'
            common:
              - 'crates/snops-common/**/*.rs'

      - name: 🧪 Test All
        if:  steps.changes.outputs.top_toml == 'true'
        run: cargo +nightly-2024-04-01 nextest run --all --verbose --fail-fast --all-features

      - name: 🧪 Test Aot
        if:  steps.changes.outputs.checkpoint == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snarkos-aot --verbose --fail-fast --all-features

      - name: 🧪 Test Checkpoint
        if:  steps.changes.outputs.aot == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snarkos-aot --verbose --fail-fast --all-features

      - name: 🧪 Test Common
        if:  steps.changes.outputs.common == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snops-common --verbose --fail-fast --all-features

      - name: 🧪 Test Control Plane
        if:  steps.changes.outputs.control_plane == 'true' || steps.changes.outputs.common == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snops --verbose --fail-fast --all-features

      - name: 🧪 Test Agent
        if:  steps.changes.outputs.agent == 'true' || steps.changes.outputs.common == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snops-agent --verbose --fail-fast --all-features

      - name: 🧪 Test Scli
        if:  steps.changes.outputs.scli == 'true' || steps.changes.outputs.common == 'true'
        run: cargo +nightly-2024-04-01 nextest run -p snops-cli --verbose --fail-fast --all-features
